pipeline {
    agent {
        label 'slave-174'
    }
    tools {
        jdk 'jdk17'
        nodejs 'Node20.0.0'
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        APP_NAME = "torus9x-nest-app"
        DOCKER_REGISTRY = "192.168.2.164:5000"
        GITHUB_CREDENTIALS = "GIT_HUB_PAT"
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage("Code Checkout") {
            steps {
                withCredentials([usernamePassword(credentialsId: "${GITHUB_CREDENTIALS}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    git branch: 'master', credentialsId: "${GITHUB_CREDENTIALS}", url: 'https://github.com/kuttit/Nestjs.git'
                }
            }
        }

        stage("Sonarqube Analysis") {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh "${SCANNER_HOME}/bin/sonar-scanner \
                        -Dsonar.projectName=Nestapp \
                        -Dsonar.projectKey=Nestapp"
                }
            }
        } 

        stage('Docker Build Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_REGISTRY}/${APP_NAME}:${BUILD_NUMBER} ."
                }
            }
        }

      stage('Push to Registry') {
            steps {
                script {
                    docker.withRegistry("http://${DOCKER_REGISTRY}", '') {
                        sh "docker push ${DOCKER_REGISTRY}/${APP_NAME}:${BUILD_NUMBER}"
                    }
                }
            }
        }

        stage('Remove Old Container') {
            steps {
                script {
                    sh "docker stop torus9x-nest-app-backend-container || true"
                    sh "docker rm torus9x-nest-app-backend-container || true"
                }
            }
        }

        stage('Remove Previous Build Image') {
            steps {
                script {
                    def prevBuildNumber = env.BUILD_NUMBER.toInteger() - 1
                    if (prevBuildNumber > 0) {
                        sh "docker rmi -f ${DOCKER_REGISTRY}/${APP_NAME}:${prevBuildNumber} || true"
                    }
                }
            }
        }

        stage('Run New Container') {
            steps {
                script {
                    sh "docker run -d --name torus9x-nest-app-backend-container -p 3002:3002 ${DOCKER_REGISTRY}/${APP_NAME}:${BUILD_NUMBER}"
                }
            } 
        }
    }

}
