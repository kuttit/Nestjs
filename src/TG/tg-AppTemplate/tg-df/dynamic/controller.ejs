import { Controller, Get, Post, Body, Patch, Param, Delete,UseGuards} from '@nestjs/common';
import { <%= relation %>Service } from './<%= relation %>.service';
import { Prisma } from '@prisma/client';
import { ApiOkResponse, ApiTags } from '@nestjs/swagger';
import { <%= relation.toLowerCase() %>Entity } from './entity/<%= relation %>.entity';
import { AbilitiesGuard } from 'src/ability/ability.guard';
import { CheckAbilities } from 'src/ability/ability.decorator';

 
@Controller('<%= relation.toLowerCase() %>')
@ApiTags('<%= relation %>')
export class <%= relation %>Controller {
  constructor(private readonly <%= relation.toLowerCase() %>Service: <%= relation %>Service) {}

<%_ data.entities.methods.forEach((method) => { _%>
  <%_ if(method.methodName === 'Post' && method.isActive.value === true) { _%>  
  @Post()
  @UseGuards(AbilitiesGuard)
  @CheckAbilities({ action: 'Post', subject: "<%= relation.toLowerCase()  %>"})
  @ApiOkResponse({ type: <%= relation.toLowerCase()  %>Entity })
  create(@Body() create<%= relation %>Dto: Prisma.<%= relation %>CreateInput) {
    return this.<%= relation.toLowerCase() %>Service.create(create<%= relation %>Dto);
  }
 
    <%_ } _%>
  <%_ if(method.methodName === 'GetALL' && method.isActive.value === true) { _%>  
  @Get()
  @UseGuards(AbilitiesGuard)
  @CheckAbilities({ action: 'Get', subject: "<%= relation.toLowerCase()  %>"})
  @ApiOkResponse({ type: <%= relation.toLowerCase()  %>Entity, isArray: true })
  findAll() {
    return this.<%= relation.toLowerCase() %>Service.findAll();
  }
 
  <%_ } _%>
  <%_ if(method.methodName === 'Get' && method.isActive.value === true) { _%>  
  @Get('<%_ for(let i=0;i<method.QueryConditions.selectedValue.length;i++){ _%>:<%= method.QueryConditions.selectedValue[i] %><%_ if (i !== method.QueryConditions.selectedValue.length-1) { _%>/<%_ }} _%>')
  @UseGuards(AbilitiesGuard)
  @CheckAbilities({ action: 'Get', subject: "<%= relation.toLowerCase()  %>"})
  @ApiOkResponse({ type: <%= relation.toLowerCase()  %>Entity })
  findOne(<%_ for(let i=0;i<method.QueryConditions.selectedValue.length;i++){ _%>@Param('<%= method.QueryConditions.selectedValue[i] %>') <%= method.QueryConditions.selectedValue[i] %>:<%_for(var j=0; j< data.entities.attributes.length; j++){ _%><%_ if(data.entities.attributes[j].cname === method.QueryConditions.selectedValue[i]){ _%><% if (data.entities.attributes[j].dataType.selectedValue === 'Int'){ %>number<% } else {%> <%= data.entities.attributes[j].dataType.selectedValue.toLowerCase() %><%_ } _%><%_ } _%><%_ } _%><%_ if (i !== method.QueryConditions.selectedValue.length-1) { _%>,<% }} %>) {
    return this.<%= relation.toLowerCase() %>Service.findOne(<%_ for (var i=0; i < method.QueryConditions.selectedValue.length; i++) { _%><%_for(var j=0; j< data.entities.attributes.length; j++){ _%><%_ if(data.entities.attributes[j].cname === method.QueryConditions.selectedValue[i]){ _%><% if (data.entities.attributes[j].dataType.selectedValue === 'Int'){ %>+<%= method.QueryConditions.selectedValue[i] %><% } else {%><%= method.QueryConditions.selectedValue[i] %><%_} _%><%_ } _%><%_ } _%><%_ if (i !== method.QueryConditions.selectedValue.length-1) { _%>,<% }} %>);
  }
 
  <%_ } _%>
  <%_ if(method.methodName === 'Put' && method.isActive.value === true) { _%>
  @Patch('<%_ for (var i=0; i < method.QueryConditions.selectedValue.length; i++){ _%>:<%= method.QueryConditions.selectedValue[i] %><%_ if (i !== method.QueryConditions.selectedValue.length-1) { _%>/<%_ }} _%>')
  @UseGuards(AbilitiesGuard)
  @CheckAbilities({ action: 'Update', subject: "<%= relation.toLowerCase()  %>"})
  @ApiOkResponse({ type: <%= relation.toLowerCase()  %>Entity })
  update(<%_ for (var i=0; i < method.QueryConditions.selectedValue.length; i++){ _%>@Param('<%= method.QueryConditions.selectedValue[i] %>') <%= method.QueryConditions.selectedValue[i] %>:<%_for(var j=0; j< data.entities.attributes.length; j++){ _%><%_ if(data.entities.attributes[j].cname === method.QueryConditions.selectedValue[i]){ _%><% if (data.entities.attributes[j].dataType.selectedValue === 'Int'){ %>number<% } else {%> <%= data.entities.attributes[j].dataType.selectedValue.toLowerCase() %><%_ } _%><%_ } _%><%_ } _%>,<% } %>
    @Body() update<%= relation %>Dto: Prisma.<%= relation %>UpdateInput) {
    return this.<%= relation.toLowerCase() %>Service.update(<%_ for (var i=0; i < method.QueryConditions.selectedValue.length; i++) { _%><%_for(var j=0; j< data.entities.attributes.length; j++){ _%><%_ if(data.entities.attributes[j].cname === method.QueryConditions.selectedValue[i]){ _%><% if (data.entities.attributes[j].dataType.selectedValue === 'Int'){ %>+<%= method.QueryConditions.selectedValue[i] %><% } else {%><%= method.QueryConditions.selectedValue[i] %><%_} _%><%_ } _%><%_ } _%>,<% } %> update<%= relation %>Dto);
  }
 
  <%_ } _%>
  <%_ if(method.methodName === 'Delete' && method.isActive.value == true) { _%>
  @Delete('<%_ for (var i=0; i < method.QueryConditions.selectedValue.length; i++){ _%>:<%= method.QueryConditions.selectedValue[i] %><%_ if (i !== method.QueryConditions.selectedValue.length-1) { _%>/<%_ }} _%>')
  @UseGuards(AbilitiesGuard)
  @CheckAbilities({ action: 'Delete', subject: "<%= relation.toLowerCase()  %>"})
  @ApiOkResponse({ type: <%= relation.toLowerCase()  %>Entity })
  remove(<%_ for (var i=0; i < method.QueryConditions.selectedValue.length; i++){ _%>@Param('<%= method.QueryConditions.selectedValue[i] %>') <%= method.QueryConditions.selectedValue[i] %>:<%_for(var j=0; j< data.entities.attributes.length; j++){ _%><%_ if(data.entities.attributes[j].cname === method.QueryConditions.selectedValue[i]){ _%><% if (data.entities.attributes[j].dataType.selectedValue === 'Int'){ %>number<% } else {%> <%= data.entities.attributes[j].dataType.selectedValue.toLowerCase() %><%_ } _%><%_ } _%><%_ } _%><%_ if (i !== method.QueryConditions.selectedValue.length-1) { _%>,<% }} %>) {
    return this.<%= relation.toLowerCase() %>Service.remove(<%_ for (var i=0; i < method.QueryConditions.selectedValue.length; i++) { _%><%_for(var j=0; j< data.entities.attributes.length; j++){ _%><%_ if(data.entities.attributes[j].cname === method.QueryConditions.selectedValue[i]){ _%><% if (data.entities.attributes[j].dataType.selectedValue === 'Int'){ %>+<%= method.QueryConditions.selectedValue[i] %><% } else {%><%= method.QueryConditions.selectedValue[i] %><%_} _%><%_ } _%><%_ } _%><%_ if (i !== method.QueryConditions.selectedValue.length-1) { _%>,<% }} %>);
  }  
  <%_ } _%>
  <%_ }) _%>
 
}