import React, { useState } from "react";
import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from "@nextui-org/react";


const Dropdown<%=data.label %> = ({setUser}:any) => {
  <%_ if (data.type === 'static') { _%>
  <%_ for (let i = 0; i < data.props.length; i++) { _%>
    <%_ if (data.props[i].name === 'items') { _%>
      <%_ let dropdownItems = data.props[i].value.split(','); _%>
      const items = [
        <%_ for (let j = 0; j < dropdownItems.length; j++) { _%>
         {
          key: '<%= dropdownItems[j]  %>',
          label: '<%= dropdownItems[j]  %>'
         },
        <%_ } _%>
       ];
    <%_ } _%>
  <%_ }  _%> 
  <%_ } _%>
  const [selectedItem, setSelectedItem] = useState('<%=data.label.toLowerCase() %>');
  const handleClick = (key:any, label:any) => {
        setUser( (prev:any) => ({...prev,  <%=data.label.toLowerCase() %>: key }));
        setSelectedItem(label);
      };
  return (
    <%_ let height = (relation.height/data2.height)*100   _%>  
    <%_ let width = (relation.width/data2.width)*100  _%>
    <%_ let left = (relation.position.x/data2.width)*100  _%>
    <%_ let top = (relation.position.y/data2.height)*100   _%>
    <%_ let mdHeight = height - (height*0.1)  _%>  
    <%_ let mdWidth = width - (width*0.1)  _%>
    <%_ let mdLeft = left - (left*0.1)  _%>
    <%_ let mdTop = top - (top*0.1)  _%>
    <%_ let smHeight = mdHeight - (mdHeight*0.1)  _%>  
    <%_ let smWidth = mdWidth - (mdWidth*0.1)  _%>
    <%_ let smLeft = mdLeft - (mdLeft*0.1)  _%>
    <%_ let smTop = mdTop - (mdTop*0.1)  _%>
    <%_ let xlHeight = height + (height*0.1)  _%>  
    <%_ let xlWidth = width + (width*0.1)  _%>
    <%_ let xlLeft = left + (left*0.1)  _%>
    <%_ let xlTop = top + (top*0.1)  _%>
    <div className="container">
      <Dropdown >
      <DropdownTrigger>
        <Button 
          variant="bordered" 
          className='absolute left-[<%= left %>%] top-[<%= top %>%] h-[<%= height %>%] w-[<%= width %>%]   
      sm:left-[<%= smLeft %>%] sm:top-[<%= smTop %>%] sm:h-[<%= smHeight %>%] sm:w-[<%= smWidth %>%] 
      md:left-[<%= mdLeft %>%] md:top-[<%= mdTop %>%] md:h-[<%= mdHeight %>%] md:w-[<%= mdWidth %>%] 
      xl:left-[<%= xlLeft %>%] xl:top-[<%= xlTop %>%] xl:h-[<%= xlHeight %>%] xl:w-[<%= xlWidth %>%] '
        >
        {selectedItem}
        </Button>
      </DropdownTrigger>
      <DropdownMenu aria-label="<%=data.label %>" items={items}>
        {(item) => (
          <DropdownItem
            key={item.key}
            color={item.key === "delete" ? "danger" : "default"}
            className={item.key === "delete" ? "text-danger" : ""}
            onClick={() => handleClick(item.key, item.label)}
          >
            {item.label}
          </DropdownItem>
        )}
      </DropdownMenu>
    </Dropdown>
    </div>
  );
};

export default Dropdown<%=data.label %>;
