'use client'
import React, { <%_ for(let i=0;i<data.events.length;i++) { _%><%_ if(data.events[i].name==="onClear"){ _%>useState<%_ break;} _%><%_ } _%> } from 'react'
import TextAreaComponent from '@/app/components/textarea'




const Textarea<%=data.label %> = ({setUser}:any) => {
  

  const handleChange=(e:any)=>{
    setUser((prev:any)=>({...prev,<%=data.label %>:e.target.value}))
      // console.log(user);
      
    }

  <%_ for(let i=0;i<data.props.length;i++) { _%>
  <%_ if(data.props[i].name === "value"){ _%>
  const [state, setState] = useState('<%= data.props[i].value _%>')
  <%_ }_%>
  <%_ } _%>


return (
  <%_ let height = (relation.height/data2.height)*100  _%>  
  <%_ let width = (relation.width/data2.width)*100  _%>
  <%_ let left = (relation.position.x/data2.width)*100  _%>
  <%_ let top = (relation.position.y/data2.height)*100  _%>
  <%_ let mdHeight = height - (height*0.1)  _%>  
  <%_ let mdWidth = width - (width*0.1)  _%>
  <%_ let mdLeft = left - (left*0.1)  _%>
  <%_ let mdTop = top - (top*0.1)  _%>
  <%_ let smHeight = mdHeight - (mdHeight*0.1)  _%>  
  <%_ let smWidth = mdWidth - (mdWidth*0.1)  _%>
  <%_ let smLeft = mdLeft - (mdLeft*0.1)  _%>
  <%_ let smTop = mdTop - (mdTop*0.1)  _%>
  <%_ let xlHeight = height + (height*0.1)  _%>  
  <%_ let xlWidth = width + (width*0.1)  _%>
  <%_ let xlLeft = left + (left*0.1)  _%>
  <%_ let xlTop = top + (top*0.1)  _%>
  <div className='container' > 
  <TextAreaComponent
  className='absolute left-[<%= left %>%] top-[<%= top %>%] h-[<%= height %>%] w-[<%= width %>%]  
  sm:left-[<%= smLeft %>%] sm:top-[<%= smTop %>%] sm:h-[<%= smHeight %>%] sm:w-[<%= smWidth %>%] 
  md:left-[<%= mdLeft %>%] md:top-[<%= mdTop %>%] md:h-[<%= mdHeight %>%] md:w-[<%= mdWidth %>%]  
  xl:left-[<%= xlLeft %>%] xl:top-[<%= xlTop %>%] xl:h-[<%= xlHeight %>%] xl:w-[<%= xlWidth %>%] '
    type='<%= data.type %>'
    //value={state}
    onChange= {handleChange}
    <%_ for(let i=0;i<data.props.length;i++) { _%>
    <%_ if(data.props[i].name === "isReadOnly" && data.props[i].value === "true"){ _%>
    isReadOnly={<%= data.props[i].value %>}
    <%_ } _%>
    <%_ if(data.props[i].name === "isRequired" && data.props[i].value === "true"){ _%>
    isRequired
    <%_ } _%>
    <%_ if(data.props[i].name === "minRows" && data.props[i].value !== ""){ _%>
    minRows={<%= data.props[i].value %>}
    <%_ } _%>
    <%_ if(data.props[i].name === "maxRows" && data.props[i].value !== ""){ _%>
    maxRows={<%= data.props[i].value %>}
    <%_ } _%>
    <%_ if(data.props[i].name === "label" && data.props[i].value !== ""){ _%>
    label="<%= data.props[i].value %>"
    <%_ } _%>
    <%_ if(data.props[i].name === "defaultValue" && data.props[i].value !== ''){ _%>
    defaultValue='<%= data.props[i].value %>'
    <%_ } _%>
    <%_ if(data.props[i].name === "placeholder" && data.props[i].value !=="" ){ _%>
    placeholder='<%= data.props[i].value %>'
    <%_ } _%>
    <%_ if(data.props[i].name === "labelPlacement" && data.props[i].value === "true"){ _%>
    labelPlacement='<%= data.props[i].value %>'
    <%_ } _%>
    <%_ if(data.props[i].name === "isInvalid" && data.props[i].value === "true"){ _%>
    isInvalid={<%= data.props[i].value %>}
    <%_ } _%>
    <%_ if(data.props[i].name === "isDisabled"&& data.props[i].value === "true"){ _%>
    isDisabled={<%= data.props[i].value %>}
    <%_ } _%>
    <%_ } _%>
      />
    </div>
  )
}
export default Textarea<%=data.label %>



